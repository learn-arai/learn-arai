version: '3.8'

services:
    postgres:
        image: postgres:16
        restart: always
        ports:
            - 5432:5432
        volumes:
            # Database data
            - ./data/postgres:/var/lib/postgresql/data
            # Initial schema
            - ./backend/schema/database-schema.sql:/docker-entrypoint-initdb.d/database-schema.sql
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    adminer:
        image: adminer
        restart: always
        ports:
            - 8081:8080
        environment:
            - ADMINER_DEFAULT_DB_DRIVER=pgsql
            - ADMINER_DEFAULT_DB_HOST=postgres
            - ADMINER_DEFAULT_DB_NAME=${POSTGRES_DB}
    frontend:
        container_name: frontend
        build:
            context: ./learn-arai
            dockerfile: Dockerfile
            args:
                - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
                - NEXT_PUBLIC_BACKEND_WS=${NEXT_PUBLIC_BACKEND_WS}
        environment:
            - NODE_ENV=production
        restart: always
        ports:
            - 3001:3001
    backend:
        container_name: backend
        build:
            context: ./backend
            dockerfile: Dockerfile
            args:
                - DATABASE_URL=${ELYSIA_DATABASE_URL}
                - RESEND_API_KEY=${ELYSIA_RESEND_API_KEY}
                - UPLOAD_FOLDER=${ELYSIA_UPLOAD_FOLDER}
        environment:
            - NODE_ENV=production
        restart: always
        ports:
            - 3000:3000