version: '3.8'

services:
    frontend:
        container_name: frontend
        build:
            context: ./learn-arai
            dockerfile: Dockerfile
            args:
                - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
                - NEXT_PUBLIC_BACKEND_WS=${NEXT_PUBLIC_BACKEND_WS}
                - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
        environment:
            - NODE_ENV=production
        restart: always
        ports:
            - 3001:3001
    backend:
        container_name: backend
        build:
            context: ./backend
            dockerfile: Dockerfile
            args:
                - DATABASE_URL=${ELYSIA_DATABASE_URL}
                - RESEND_API_KEY=${ELYSIA_RESEND_API_KEY}
                - UPLOAD_FOLDER=${ELYSIA_UPLOAD_FOLDER}
                - JUDGE0_URL=${ELYSIA_JUDGE0_URL}
                - JUDGE0_API_TOKEN=${ELYSIA_JUDGE0_API_TOKEN}
                - API_URL=${ELYSIA_API_URL}
                - WEB_URL=${ELYSIA_WEB_URL}
                - STRIPE_SECRET_KEY=${ELYSIA_STRIPE_SECRET_KEY}
                - STRIPE_PUBLISHABLE_KEY=${ELYSIA_STRIPE_PUBLISHABLE_KEY}
                - STRIPE_PRODUCT_PREMIUM=${ELYSIA_STRIPE_PRODUCT_PREMIUM}
                - STRIPE_WEBHOOK_SECRET=${ELYSIA_STRIPE_WEBHOOK_SECRET}
        environment:
            - NODE_ENV=production
        restart: always
        ports:
            - 3000:3000
        volumes:
            # Uploads folder
            - ./data/uploads:/app/${ELYSIA_UPLOAD_FOLDER}
        depends_on:
            - postgres
